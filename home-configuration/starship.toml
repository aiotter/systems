"$schema" = "https://starship.rs/config-schema.json"
add_newline = true
format = "[($nix_shell${custom.nix-shell})](fg:#9A348E bg:#DA627D)[ ](bg:#DA627D)$directory[](fg:#DA627D bg:#FCA17D)$git_branch$git_commit$git_status$git_state[](fg:#FCA17D bg:#86BBD8)$deno$elixir$elm$golang$haskell$java$julia$nim$rust$zig[](fg:#86BBD8 bg:#06969A)$docker_context[](fg:#06969A bg:#33658A)[$status](bg:#33658A)$cmd_duration[ ](fg:#33658A)$line_break\\$ "
right_format = "[](bg:#9A348E)$cmd_duration"

[c]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[cmd_duration]
format = "[$duration  ]($style)"
style = "bg:#33658A"

[custom.nix-shell]
command = "echo \"${PATH//:/$'\\n'}\" | sed -En 's#^/nix/store/[a-z0-9]+-([^/]+).*$#\\1#p'\n"
description = "Detect inside Nix Shell"
format = "[ $symbol SHELL( \\($output\\)) ]($style)"
shell = ["bash", "-c"]
style = "bg:#9A348E"
symbol = "❄️"
use_stdin = false
when = "[ -z \"$IN_NIX_SHELL\" -a -n \"$(echo \"${PATH//:/$'\\n'}\" | grep '/nix/store')\" ]\n"

[deno]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = "🦕 "

[directory]
format = "[ $path ]($style)"
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style)[ ]($style)"
repo_root_style = "fg:black bg:#DA627D bold"
style = "fg:black bg:#DA627D"
truncation_length = 3
truncation_symbol = "…/"

[directory.substitutions]
Documents = " "
Downloads = " "
Music = " "
Pictures = " "

[docker_context]
format = "[ $symbol$context ]($style) $path"
style = "bg:#06969A"
symbol = " "

[elixir]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[elm]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[git_branch]
format = "[ $symbol$branch]($style)"
style = "fg:black bg:#FCA17D"
symbol = " "

[git_commit]
format = "[(@$hash)( $tag)]($style)"
only_detached = true
style = "fg:black bg:#FCA17D"
tag_disabled = false
tag_symbol = " "

[git_state]
format = "[\\($state( $progress_current/$progress_total)\\) ]($style)"
style = "fg:black bg:#FCA17D"

[git_status]
ahead = "⇡ $count "
behind = "⇣ $count "
conflicted = " $count "
deleted = "✘ $count "
diverged = "⇡ $ahead_count ⇣ $behind_count "
format = "[( $all_status$ahead_behind\b) ]($style)"
modified = " $count "
renamed = "» $count "
staged = " $count "
stashed = " $count "
style = "fg:black bg:#FCA17D"
untracked = " $count "

[golang]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[haskell]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[java]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[julia]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[nim]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = " "

[nix_shell]
format = "[ $symbol DEVSHELL \\($state\\) ]($style)"
style = "bg:#9A348E"
symbol = "❄️"

[nodejs]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = ""

[rust]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
symbol = ""

[status]
disabled = false
format = " $symbol $common_meaning(SIG$signal_name) "
pipestatus = true
pipestatus_format = "[\\[$pipestatus\\]]($style) => $symbol $common_meaning(SIG$signal_name) "
pipestatus_separator = "\b|"
recognize_signal_code = true
style = "bg:#33658A"
success_symbol = "✓"
symbol = "✘ $int"

[username]
format = "[$user ]($style)"
show_always = true
style_root = "bg:#9A348E"
style_user = "bg:#9A348E"

[zig]
format = "[ $symbol($version) ]($style)"
style = "fg:black bg:#86BBD8"
